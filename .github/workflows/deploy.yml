name: Build and Deploy Blue-Green to GKE

on:
  push:
    branches:
      - main  # Deploy Blue (Production)
      - test  # Deploy Green (Test)

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: my-cluster  # Replace with your cluster name
  GKE_ZONE: us-central1  # Replace with your cluster zone
  GAR_ZONE: us-central1  # Replace with your artifact registry zone
  GAR_REPO: my-repo  # Replace with your artifact registry repo
  IMAGE: my-app  # Image name
  IMAGE_TAG: blue #image tag

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

      # Authenticate with Google Cloud
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - name: Docker configuration
      run: |-
        gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      # Configure Docker to use Google Artifact Registry
    - name: Configure Docker for GAR
      run: gcloud auth configure-docker $GAR_ZONE-docker.pkg.dev

      # Get GKE credentials
    - name: Configure GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        
    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG"

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f deploy.yml
        kubectl get pods
        kubectl rollout restart deployment blue-deployment